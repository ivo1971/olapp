/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import * as import0 from '../../../../../src/app/components/image-native/image-native.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from './image-native.component.css.shim.ngstyle';
import * as import10 from '@angular/core/src/security';
export var Wrapper_ImageNativeComponent = (function () {
    function Wrapper_ImageNativeComponent() {
        this._changed = false;
        this.context = new import0.ImageNativeComponent();
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
    }
    Wrapper_ImageNativeComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_ImageNativeComponent.prototype.ngOnDestroy = function () {
    };
    Wrapper_ImageNativeComponent.prototype.check_source = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.source = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_ImageNativeComponent.prototype.check_width = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.width = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_ImageNativeComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_ImageNativeComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_ImageNativeComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_ImageNativeComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_ImageNativeComponent;
}());
var renderType_ImageNativeComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_ImageNativeComponent_Host0 = (function (_super) {
    __extends(View_ImageNativeComponent_Host0, _super);
    function View_ImageNativeComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ImageNativeComponent_Host0, renderType_ImageNativeComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
    }
    View_ImageNativeComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'image-native', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_ImageNativeComponent0(this.viewUtils, this, 0, this._el_0);
        this._ImageNativeComponent_0_3 = new Wrapper_ImageNativeComponent();
        this.compView_0.create(this._ImageNativeComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._ImageNativeComponent_0_3.context);
    };
    View_ImageNativeComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.ImageNativeComponent) && (0 === requestNodeIndex))) {
            return this._ImageNativeComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_ImageNativeComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._ImageNativeComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_ImageNativeComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
    };
    View_ImageNativeComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_ImageNativeComponent_Host0;
}(import2.AppView));
export var ImageNativeComponentNgFactory = new import8.ComponentFactory('image-native', View_ImageNativeComponent_Host0, import0.ImageNativeComponent);
var styles_ImageNativeComponent = [import9.styles];
var renderType_ImageNativeComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.Emulated, styles_ImageNativeComponent, {});
export var View_ImageNativeComponent0 = (function (_super) {
    __extends(View_ImageNativeComponent0, _super);
    function View_ImageNativeComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_ImageNativeComponent0, renderType_ImageNativeComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
    }
    View_ImageNativeComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._el_0 = import3.createRenderElement(this.renderer, parentRenderNode, 'img', import3.EMPTY_INLINE_ARRAY, null);
        this.init(null, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_ImageNativeComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.context.fullSrc;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'src', this.viewUtils.sanitizer.sanitize(import10.SecurityContext.URL, currVal_1));
            this._expr_1 = currVal_1;
        }
        var currVal_2 = this.context.width;
        if (import3.checkBinding(throwOnChange, this._expr_2, currVal_2)) {
            this.renderer.setElementAttribute(this._el_0, 'width', ((currVal_2 == null) ? null : currVal_2.toString()));
            this._expr_2 = currVal_2;
        }
    };
    return View_ImageNativeComponent0;
}(import2.AppView));
//# sourceMappingURL=image-native.component.ngfactory.js.map
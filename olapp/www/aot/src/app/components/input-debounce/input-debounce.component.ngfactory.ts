/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../src/app/components/input-debounce/input-debounce.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '@angular/core/src/linker/element_ref';
import * as import10 from './input-debounce.component.css.shim.ngstyle';
import * as import11 from '../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import12 from '../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import13 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import14 from '@angular/forms/src/directives/default_value_accessor';
import * as import15 from '@angular/forms/src/directives/control_value_accessor';
import * as import16 from '@angular/forms/src/directives/ng_model';
import * as import17 from '@angular/forms/src/directives/ng_control';
import * as import18 from '@angular/forms/src/directives/ng_control_status';
export class Wrapper_InputDebounceComponent {
  /*private*/ _eventHandler:Function;
  context:import0.InputDebounceComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  subscription0:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.InputDebounceComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
    (this.subscription0 && this.subscription0.unsubscribe());
  }
  check_classError(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.classError = currValue;
      this._expr_0 = currValue;
    }
  }
  check_classWarning(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.classWarning = currValue;
      this._expr_1 = currValue;
    }
  }
  check_classOk(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.classOk = currValue;
      this._expr_2 = currValue;
    }
  }
  check_delay(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.delay = currValue;
      this._expr_3 = currValue;
    }
  }
  check_disabled(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.disabled = currValue;
      this._expr_4 = currValue;
    }
  }
  check_value(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.value = currValue;
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any,emit0:boolean):void {
    this._eventHandler = _eventHandler;
    if (emit0) { (this.subscription0 = this.context.valueEv.subscribe(_eventHandler.bind(view,'valueEv'))); }
  }
}
var renderType_InputDebounceComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_InputDebounceComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.InputDebounceComponent>;
  _InputDebounceComponent_0_3:Wrapper_InputDebounceComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InputDebounceComponent_Host0,renderType_InputDebounceComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'input-debounce',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_InputDebounceComponent0(this.viewUtils,this,0,this._el_0);
    this._InputDebounceComponent_0_3 = new Wrapper_InputDebounceComponent(new import9.ElementRef(this._el_0));
    this.compView_0.create(this._InputDebounceComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._InputDebounceComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.InputDebounceComponent) && (0 === requestNodeIndex))) { return this._InputDebounceComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._InputDebounceComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
    this._InputDebounceComponent_0_3.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const InputDebounceComponentNgFactory:import8.ComponentFactory<import0.InputDebounceComponent> = new import8.ComponentFactory<import0.InputDebounceComponent>('input-debounce',View_InputDebounceComponent_Host0,import0.InputDebounceComponent);
const styles_InputDebounceComponent:any[] = [import10.styles];
var renderType_InputDebounceComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_InputDebounceComponent,{});
export class View_InputDebounceComponent0 extends import2.AppView<import0.InputDebounceComponent> {
  _el_0:any;
  _DefaultValueAccessor_0_3:import11.Wrapper_DefaultValueAccessor;
  _NG_VALUE_ACCESSOR_0_4:any[];
  _NgModel_0_5:import12.Wrapper_NgModel;
  _NgControl_0_6:any;
  _NgControlStatus_0_7:import13.Wrapper_NgControlStatus;
  _text_1:any;
  /*private*/ _expr_7:any;
  /*private*/ _expr_8:any;
  /*private*/ _expr_9:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_InputDebounceComponent0,renderType_InputDebounceComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
    this._expr_7 = import1.UNINITIALIZED;
    this._expr_8 = import1.UNINITIALIZED;
    this._expr_9 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._el_0 = import3.createRenderElement(this.renderer,parentRenderNode,'input',new import3.InlineArray4(4,'class','form-control','type','text'),(null as any));
    this._DefaultValueAccessor_0_3 = new import11.Wrapper_DefaultValueAccessor(this.renderer,new import9.ElementRef(this._el_0));
    this._NG_VALUE_ACCESSOR_0_4 = [this._DefaultValueAccessor_0_3.context];
    this._NgModel_0_5 = new import12.Wrapper_NgModel((null as any),(null as any),(null as any),this._NG_VALUE_ACCESSOR_0_4);
    this._NgControl_0_6 = this._NgModel_0_5.context;
    this._NgControlStatus_0_7 = new import13.Wrapper_NgControlStatus(this._NgControl_0_6);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray8(6,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_0));
    this._NgModel_0_5.subscribe(this,this.eventHandler(this.handleEvent_0),true);
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import14.DefaultValueAccessor) && (0 === requestNodeIndex))) { return this._DefaultValueAccessor_0_3.context; }
    if (((token === import15.NG_VALUE_ACCESSOR) && (0 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_0_4; }
    if (((token === import16.NgModel) && (0 === requestNodeIndex))) { return this._NgModel_0_5.context; }
    if (((token === import17.NgControl) && (0 === requestNodeIndex))) { return this._NgControl_0_6; }
    if (((token === import18.NgControlStatus) && (0 === requestNodeIndex))) { return this._NgControlStatus_0_7.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_0_1_0:any = this.context.disabled;
    this._NgModel_0_5.check_isDisabled(currVal_0_1_0,throwOnChange,false);
    const currVal_0_1_1:any = this.context.value;
    this._NgModel_0_5.check_model(currVal_0_1_1,throwOnChange,false);
    this._NgModel_0_5.ngDoCheck(this,this._el_0,throwOnChange);
    this._NgControlStatus_0_7.ngDoCheck(this,this._el_0,throwOnChange);
    const currVal_7:any = this.context.classOk;
    if (import3.checkBinding(throwOnChange,this._expr_7,currVal_7)) {
      this.renderer.setElementClass(this._el_0,'input-ok',currVal_7);
      this._expr_7 = currVal_7;
    }
    const currVal_8:any = this.context.classWarning;
    if (import3.checkBinding(throwOnChange,this._expr_8,currVal_8)) {
      this.renderer.setElementClass(this._el_0,'input-warning',currVal_8);
      this._expr_8 = currVal_8;
    }
    const currVal_9:any = this.context.classError;
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementClass(this._el_0,'input-error',currVal_9);
      this._expr_9 = currVal_9;
    }
    this._NgControlStatus_0_7.checkHost(this,this,this._el_0,throwOnChange);
  }
  destroyInternal():void {
    this._NgModel_0_5.ngOnDestroy();
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_0_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.context.value = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
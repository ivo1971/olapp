/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from '../../../../../src/app/components/team-info-list/team-info-list.component';
import * as import1 from '@angular/core/src/change_detection/change_detection_util';
import * as import2 from '@angular/core/src/linker/view';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/render/api';
import * as import5 from '@angular/core/src/metadata/view';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/constants';
import * as import8 from '@angular/core/src/linker/component_factory';
import * as import9 from '../../../../../src/app/services/websocket.user.service';
import * as import10 from './team-info-list.component.css.shim.ngstyle';
import * as import11 from '../../../../../src/app/components/team-info/team-info.component';
import * as import12 from '../team-info/team-info.component.ngfactory';
import * as import13 from '../../../../../src/app/components/user-info-list/user-info-list.component';
import * as import14 from '../user-info-list/user-info-list.component.ngfactory';
import * as import15 from '@angular/core/src/linker/view_container';
import * as import16 from '../../../../node_modules/@angular/forms/src/directives/default_value_accessor.ngfactory';
import * as import17 from '../../../../node_modules/@angular/forms/src/directives/validators.ngfactory';
import * as import18 from '../../../../node_modules/@angular/forms/src/directives/ng_model.ngfactory';
import * as import19 from '../../../../node_modules/@angular/forms/src/directives/ng_control_status.ngfactory';
import * as import20 from '@angular/core/src/linker/element_ref';
import * as import21 from '@angular/forms/src/directives/default_value_accessor';
import * as import22 from '@angular/forms/src/directives/validators';
import * as import23 from '@angular/forms/src/validators';
import * as import24 from '@angular/forms/src/directives/control_value_accessor';
import * as import25 from '@angular/forms/src/directives/ng_model';
import * as import26 from '@angular/forms/src/directives/ng_control';
import * as import27 from '@angular/forms/src/directives/ng_control_status';
import * as import28 from '../../../../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import29 from '../../../../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import30 from '@angular/core/src/linker/template_ref';
import * as import31 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import32 from '@angular/common/src/directives/ng_for';
import * as import33 from '@angular/common/src/directives/ng_if';
export class Wrapper_TeamInfoListComponent {
  /*private*/ _eventHandler:Function;
  context:import0.TeamInfoListComponent;
  /*private*/ _changed:boolean;
  /*private*/ _expr_0:any;
  /*private*/ _expr_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  /*private*/ _expr_4:any;
  /*private*/ _expr_5:any;
  constructor(p0:any) {
    this._changed = false;
    this.context = new import0.TeamInfoListComponent(p0);
    this._expr_0 = import1.UNINITIALIZED;
    this._expr_1 = import1.UNINITIALIZED;
    this._expr_2 = import1.UNINITIALIZED;
    this._expr_3 = import1.UNINITIALIZED;
    this._expr_4 = import1.UNINITIALIZED;
    this._expr_5 = import1.UNINITIALIZED;
  }
  ngOnDetach(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  check_alert(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_0,currValue))) {
      this._changed = true;
      this.context.alert = currValue;
      this._expr_0 = currValue;
    }
  }
  check_editTeams(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_1,currValue))) {
      this._changed = true;
      this.context.editTeams = currValue;
      this._expr_1 = currValue;
    }
  }
  check_editUsers(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_2,currValue))) {
      this._changed = true;
      this.context.editUsers = currValue;
      this._expr_2 = currValue;
    }
  }
  check_teamsInfo(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_3,currValue))) {
      this._changed = true;
      this.context.teamsInfo = currValue;
      this._expr_3 = currValue;
    }
  }
  check_teamsInfoAll(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_4,currValue))) {
      this._changed = true;
      this.context.teamsInfoAll = currValue;
      this._expr_4 = currValue;
    }
  }
  check_usersInfo(currValue:any,throwOnChange:boolean,forceUpdate:boolean):void {
    if ((forceUpdate || import3.checkBinding(throwOnChange,this._expr_5,currValue))) {
      this._changed = true;
      this.context.usersInfo = currValue;
      this._expr_5 = currValue;
    }
  }
  ngDoCheck(view:import2.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    if (!throwOnChange) { if ((view.numberOfChecks === 0)) { this.context.ngOnInit(); } }
    return changed;
  }
  checkHost(view:import2.AppView<any>,componentView:import2.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import2.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_TeamInfoListComponent_Host:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.None,([] as any[]),{});
class View_TeamInfoListComponent_Host0 extends import2.AppView<any> {
  _el_0:any;
  compView_0:import2.AppView<import0.TeamInfoListComponent>;
  _TeamInfoListComponent_0_3:Wrapper_TeamInfoListComponent;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TeamInfoListComponent_Host0,renderType_TeamInfoListComponent_Host,import6.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'team-info-list',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_TeamInfoListComponent0(this.viewUtils,this,0,this._el_0);
    this._TeamInfoListComponent_0_3 = new Wrapper_TeamInfoListComponent(this.injectorGet(import9.WebsocketUserService,this.parentIndex));
    this.compView_0.create(this._TeamInfoListComponent_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import8.ComponentRef_<any>(0,this,this._el_0,this._TeamInfoListComponent_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.TeamInfoListComponent) && (0 === requestNodeIndex))) { return this._TeamInfoListComponent_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._TeamInfoListComponent_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const TeamInfoListComponentNgFactory:import8.ComponentFactory<import0.TeamInfoListComponent> = new import8.ComponentFactory<import0.TeamInfoListComponent>('team-info-list',View_TeamInfoListComponent_Host0,import0.TeamInfoListComponent);
const styles_TeamInfoListComponent:any[] = [import10.styles];
class View_TeamInfoListComponent1 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  compView_4:import2.AppView<import11.TeamInfoComponent>;
  _TeamInfoComponent_4_3:import12.Wrapper_TeamInfoComponent;
  _text_5:any;
  _text_6:any;
  _el_7:any;
  compView_7:import2.AppView<import13.UserInfoListComponent>;
  _UserInfoListComponent_7_3:import14.Wrapper_UserInfoListComponent;
  _text_8:any;
  /*private*/ _expr_13:any;
  /*private*/ _expr_14:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_TeamInfoListComponent1,renderType_TeamInfoListComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_13 = import1.UNINITIALIZED;
    this._expr_14 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','row alert'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'team-info',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_4 = new import12.View_TeamInfoComponent0(this.viewUtils,this,4,this._el_4);
    this._TeamInfoComponent_4_3 = new import12.Wrapper_TeamInfoComponent(this.parentView.injectorGet(import9.WebsocketUserService,this.parentIndex));
    this.compView_4.create(this._TeamInfoComponent_4_3.context);
    this._text_5 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_6 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_7 = import3.createRenderElement(this.renderer,this._el_0,'user-info-list',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.compView_7 = new import14.View_UserInfoListComponent0(this.viewUtils,this,7,this._el_7);
    this._UserInfoListComponent_7_3 = new import14.Wrapper_UserInfoListComponent();
    this.compView_7.create(this._UserInfoListComponent_7_3.context);
    this._text_8 = this.renderer.createText(this._el_0,'\n',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._text_6,
      this._el_7,
      this._text_8
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import11.TeamInfoComponent) && (4 === requestNodeIndex))) { return this._TeamInfoComponent_4_3.context; }
    if (((token === import13.UserInfoListComponent) && (7 === requestNodeIndex))) { return this._UserInfoListComponent_7_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_4_0_0:any = this.context.$implicit;
    this._TeamInfoComponent_4_3.check_team(currVal_4_0_0,throwOnChange,false);
    const currVal_4_0_1:any = this.parentView.context.editTeams;
    this._TeamInfoComponent_4_3.check_edit(currVal_4_0_1,throwOnChange,false);
    this._TeamInfoComponent_4_3.ngDoCheck(this,this._el_4,throwOnChange);
    const currVal_7_0_0:any = this.parentView.context.alert;
    this._UserInfoListComponent_7_3.check_alert(currVal_7_0_0,throwOnChange,false);
    const currVal_7_0_1:any = this.parentView.context.editUsers;
    this._UserInfoListComponent_7_3.check_edit(currVal_7_0_1,throwOnChange,false);
    const currVal_7_0_2:any = this.context.$implicit;
    this._UserInfoListComponent_7_3.check_team(currVal_7_0_2,throwOnChange,false);
    const currVal_7_0_3:any = this.parentView.context.teamsInfoAll;
    this._UserInfoListComponent_7_3.check_teamsInfoAll(currVal_7_0_3,throwOnChange,false);
    const currVal_7_0_4:any = this.parentView.context.usersInfo;
    this._UserInfoListComponent_7_3.check_usersInfo(currVal_7_0_4,throwOnChange,false);
    this._UserInfoListComponent_7_3.ngDoCheck(this,this._el_7,throwOnChange);
    const currVal_13:boolean = !this.parentView.context.alert;
    if (import3.checkBinding(throwOnChange,this._expr_13,currVal_13)) {
      this.renderer.setElementClass(this._el_2,'alert-success',currVal_13);
      this._expr_13 = currVal_13;
    }
    const currVal_14:any = this.parentView.context.alert;
    if (import3.checkBinding(throwOnChange,this._expr_14,currVal_14)) {
      this.renderer.setElementClass(this._el_2,'alert-danger',currVal_14);
      this._expr_14 = currVal_14;
    }
    this.compView_4.internalDetectChanges(throwOnChange);
    this.compView_7.internalDetectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_4.destroy();
    this.compView_7.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_TeamInfoListComponent2 extends import2.AppView<any> {
  _el_0:any;
  _text_1:any;
  _el_2:any;
  _text_3:any;
  _el_4:any;
  _text_5:any;
  _el_6:any;
  _DefaultValueAccessor_6_3:import16.Wrapper_DefaultValueAccessor;
  _RequiredValidator_6_4:import17.Wrapper_RequiredValidator;
  _NG_VALIDATORS_6_5:any[];
  _NG_VALUE_ACCESSOR_6_6:any[];
  _NgModel_6_7:import18.Wrapper_NgModel;
  _NgControl_6_8:any;
  _NgControlStatus_6_9:import19.Wrapper_NgControlStatus;
  _text_7:any;
  _text_8:any;
  _el_9:any;
  _text_10:any;
  _el_11:any;
  _text_12:any;
  _text_13:any;
  _el_14:any;
  _text_15:any;
  _text_16:any;
  _text_17:any;
  _text_18:any;
  /*private*/ _expr_26:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import15.ViewContainer) {
    super(View_TeamInfoListComponent2,renderType_TeamInfoListComponent,import6.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_26 = import1.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n  ',(null as any));
    this._el_2 = import3.createRenderElement(this.renderer,this._el_0,'div',new import3.InlineArray2(2,'class','row alert alert-info'),(null as any));
    this._text_3 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_4 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','col-md-7'),(null as any));
    this._text_5 = this.renderer.createText(this._el_4,'\n      ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_4,'input',new import3.InlineArray4(4,'required','','type','text'),(null as any));
    this._DefaultValueAccessor_6_3 = new import16.Wrapper_DefaultValueAccessor(this.renderer,new import20.ElementRef(this._el_6));
    this._RequiredValidator_6_4 = new import17.Wrapper_RequiredValidator();
    this._NG_VALIDATORS_6_5 = [this._RequiredValidator_6_4.context];
    this._NG_VALUE_ACCESSOR_6_6 = [this._DefaultValueAccessor_6_3.context];
    this._NgModel_6_7 = new import18.Wrapper_NgModel((null as any),this._NG_VALIDATORS_6_5,(null as any),this._NG_VALUE_ACCESSOR_6_6);
    this._NgControl_6_8 = this._NgModel_6_7.context;
    this._NgControlStatus_6_9 = new import19.Wrapper_NgControlStatus(this._NgControl_6_8);
    this._text_7 = this.renderer.createText(this._el_4,' \n    ',(null as any));
    this._text_8 = this.renderer.createText(this._el_2,'\n    ',(null as any));
    this._el_9 = import3.createRenderElement(this.renderer,this._el_2,'div',new import3.InlineArray2(2,'class','col-md-5'),(null as any));
    this._text_10 = this.renderer.createText(this._el_9,'\n      ',(null as any));
    this._el_11 = import3.createRenderElement(this.renderer,this._el_9,'button',new import3.InlineArray4(4,'class','btn btn-success','type','button'),(null as any));
    this._text_12 = this.renderer.createText(this._el_11,'Add',(null as any));
    this._text_13 = this.renderer.createText(this._el_9,'\n      ',(null as any));
    this._el_14 = import3.createRenderElement(this.renderer,this._el_9,'button',new import3.InlineArray4(4,'class','btn btn-warning','type','button'),(null as any));
    this._text_15 = this.renderer.createText(this._el_14,'Clear',(null as any));
    this._text_16 = this.renderer.createText(this._el_9,'\n    ',(null as any));
    this._text_17 = this.renderer.createText(this._el_2,'\n  ',(null as any));
    this._text_18 = this.renderer.createText(this._el_0,'\n',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_6,new import3.InlineArray8(6,'ngModelChange',(null as any),'input',(null as any),'blur',(null as any)),this.eventHandler(this.handleEvent_6));
    this._NgModel_6_7.subscribe(this,this.eventHandler(this.handleEvent_6),true);
    var disposable_1:Function = import3.subscribeToRenderElement(this,this._el_11,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_11));
    var disposable_2:Function = import3.subscribeToRenderElement(this,this._el_14,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_14));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._el_2,
      this._text_3,
      this._el_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._text_8,
      this._el_9,
      this._text_10,
      this._el_11,
      this._text_12,
      this._text_13,
      this._el_14,
      this._text_15,
      this._text_16,
      this._text_17,
      this._text_18
    ]
    ),[
      disposable_0,
      disposable_1,
      disposable_2
    ]
    );
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import21.DefaultValueAccessor) && (6 === requestNodeIndex))) { return this._DefaultValueAccessor_6_3.context; }
    if (((token === import22.RequiredValidator) && (6 === requestNodeIndex))) { return this._RequiredValidator_6_4.context; }
    if (((token === import23.NG_VALIDATORS) && (6 === requestNodeIndex))) { return this._NG_VALIDATORS_6_5; }
    if (((token === import24.NG_VALUE_ACCESSOR) && (6 === requestNodeIndex))) { return this._NG_VALUE_ACCESSOR_6_6; }
    if (((token === import25.NgModel) && (6 === requestNodeIndex))) { return this._NgModel_6_7.context; }
    if (((token === import26.NgControl) && (6 === requestNodeIndex))) { return this._NgControl_6_8; }
    if (((token === import27.NgControlStatus) && (6 === requestNodeIndex))) { return this._NgControlStatus_6_9.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._DefaultValueAccessor_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_1_0:any = '';
    this._RequiredValidator_6_4.check_required(currVal_6_1_0,throwOnChange,false);
    this._RequiredValidator_6_4.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_6_2_0:any = this.parentView.context.newTeamName;
    this._NgModel_6_7.check_model(currVal_6_2_0,throwOnChange,false);
    this._NgModel_6_7.ngDoCheck(this,this._el_6,throwOnChange);
    this._NgControlStatus_6_9.ngDoCheck(this,this._el_6,throwOnChange);
    this._RequiredValidator_6_4.checkHost(this,this,this._el_6,throwOnChange);
    this._NgControlStatus_6_9.checkHost(this,this,this._el_6,throwOnChange);
    const currVal_26:any = (0 === this.parentView.context.newTeamName.length);
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      this.renderer.setElementClass(this._el_11,'disabled',currVal_26);
      this._expr_26 = currVal_26;
    }
  }
  destroyInternal():void {
    this._NgModel_6_7.ngOnDestroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_6(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    result = (this._DefaultValueAccessor_6_3.handleEvent(eventName,$event) && result);
    if ((eventName == 'ngModelChange')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.newTeamName = $event)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_11(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.onClickAddTeam()) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
  handleEvent_14(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>(this.parentView.context.newTeamName = '')) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
var renderType_TeamInfoListComponent:import4.RenderComponentType = import3.createRenderComponentType('',0,import5.ViewEncapsulation.Emulated,styles_TeamInfoListComponent,{});
export class View_TeamInfoListComponent0 extends import2.AppView<import0.TeamInfoListComponent> {
  _anchor_0:any;
  /*private*/ _vc_0:import15.ViewContainer;
  _TemplateRef_0_5:any;
  _NgFor_0_6:import28.Wrapper_NgFor;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import15.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import29.Wrapper_NgIf;
  _text_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import2.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_TeamInfoListComponent0,renderType_TeamInfoListComponent,import6.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import8.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._anchor_0 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_0 = new import15.ViewContainer(0,(null as any),this,this._anchor_0);
    this._TemplateRef_0_5 = new import30.TemplateRef_(this,0,this._anchor_0);
    this._NgFor_0_6 = new import28.Wrapper_NgFor(this._vc_0.vcRef,this._TemplateRef_0_5,this.parentView.injectorGet(import31.IterableDiffers,this.parentIndex),this.ref);
    this._text_1 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(parentRenderNode,(null as any));
    this._vc_2 = new import15.ViewContainer(2,(null as any),this,this._anchor_2);
    this._TemplateRef_2_5 = new import30.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import29.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(parentRenderNode,'\n',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._anchor_0,
      this._text_1,
      this._anchor_2,
      this._text_3
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import30.TemplateRef) && (0 === requestNodeIndex))) { return this._TemplateRef_0_5; }
    if (((token === import32.NgFor) && (0 === requestNodeIndex))) { return this._NgFor_0_6.context; }
    if (((token === import30.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import33.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_0_0_0:any = this.context.teamsInfo;
    this._NgFor_0_6.check_ngForOf(currVal_0_0_0,throwOnChange,false);
    this._NgFor_0_6.ngDoCheck(this,this._anchor_0,throwOnChange);
    const currVal_2_0_0:any = this.context.editTeams;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    this._vc_0.detectChangesInNestedViews(throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
  }
  destroyInternal():void {
    this._vc_0.destroyNestedViews();
    this._vc_2.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import2.AppView<any> {
    if ((nodeIndex == 0)) { return new View_TeamInfoListComponent1(this.viewUtils,this,0,this._anchor_0,this._vc_0); }
    if ((nodeIndex == 2)) { return new View_TeamInfoListComponent2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    return (null as any);
  }
}